{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css","components/Contacts/ContactsItem/ContactsItem.module.css","components/Section/Section.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsOperation.js","components/Phonebook/Phonebook.js","components/Section/Section.js","redux/contacts/contactsSelector.js","components/Filter/Filter.js","components/Contacts/ContactsItem/ContactsItem.js","components/Contacts/Contacts.js","App.js","redux/contacts/contactsRecuders.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","getContactsRequest","getContactsSuccess","getContactsError","axios","defaults","baseURL","Phonebook","initialState","name","number","state","handleSubmit","e","a","preventDefault","setState","id","uuidv4","props","onSubmit","reset","onInputChange","target","value","className","styles","phonebook","this","type","inpt","onChange","autoComplete","btn","Component","Section","title","children","getLoading","contacts","loading","getAllContacts","items","getFilter","filter","getFilterContacts","createSelector","item","toLowerCase","includes","connect","dispatch","ContactsItem","contact","deleteContact","onClick","delete","map","el","addContact","post","data","getContacts","get","useEffect","find","alert","contactsItems","createReducer","payload","_","error","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5c23c90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"Phonebook_phonebook__3tLKS\",\"btn\":\"Phonebook_btn__3_V5t\",\"inpt\":\"Phonebook_inpt__R0FMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inpt\":\"Filter_inpt__1nXfK\",\"filter\":\"Filter_filter__2LIjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactsItem_name__2KSbu\",\"btn\":\"ContactsItem_btn__3a-uE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__10zUY\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"@contact/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"@contact/addContactSuccess\");\r\nexport const addContactError = createAction(\"@contact/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"@contact/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"@contact/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"@contact/deleteContactError\");\r\n\r\nexport const filterContacts = createAction(\"@contacts/filter\");\r\n\r\nexport const getContactsRequest = createAction(\"@contacts/getContactRequest\");\r\nexport const getContactsSuccess = createAction(\"@contacts/getContactSuccess\");\r\nexport const getContactsError = createAction(\"@contacts/getContactError\");\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n} from \"./contactsActions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nexport const addContact = ({ name, number }) => async (dispatch) => {\r\n  const contacts = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contacts);\r\n\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Phonebook.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass Phonebook extends Component {\r\n  initialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  state = {\r\n    ...this.initialState,\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await this.setState({ id: uuidv4() });\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  onInputChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...this.initialState });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={styles.phonebook}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <p>Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              name=\"name\"\r\n              className={styles.inpt}\r\n              onChange={this.onInputChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label>\r\n            <p>Number</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.number}\r\n              name=\"number\"\r\n              className={styles.inpt}\r\n              onChange={this.onInputChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styles from \"./Section.module.css\"\r\n\r\nconst Section = (props) => {\r\n  const { title } = props\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {props.children}\r\n    </>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (contacts) => contacts.loading;\r\nexport const getAllContacts = (contacts) => contacts.items;\r\nexport const getFilter = (contacts) => contacts.filter;\r\n\r\nexport const getFilterContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (items, filter) => {\r\n    return items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/contacts/contactsActions\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelector\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChange, filterContacts }) => {\r\n  const SetFilter = (e) => {\r\n    filterContacts(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.filter}>\r\n        <label>\r\n          <p>Find contacts by name</p>\r\n          <input\r\n            type=\"text\"\r\n            value={filter}\r\n            onChange={SetFilter}\r\n            className={styles.inpt}\r\n            autoComplete=\"off\"\r\n          />\r\n        </label>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  filter: getFilter(contacts),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    filterContacts: (name) => dispatch(filterContacts(name)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"./ContactsItem.module.css\";\r\n\r\nconst ContactsItem = ({ contact, deleteContact }) => {\r\n  const { name, number, id } = contact;\r\n  return (\r\n    <li className={styles.name}>\r\n      {name}: {number}\r\n      <button className={styles.btn} onClick={() => deleteContact(id)}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactsItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactsItem from \"./ContactsItem/ContactsItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/contactsOperation\";\r\nimport { getFilterContacts } from \"../../redux/contacts/contactsSelector\";\r\n\r\nconst Contacts = ({ deleteContact, filterContacts }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"contacts__name\">\r\n        {filterContacts.map((el) => (\r\n          <ContactsItem\r\n            contact={el}\r\n            key={el.id}\r\n            deleteContact={deleteContact}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  filterContacts: getFilterContacts(contacts),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: (id) => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nContacts.propTypes = {\r\n  items: PropTypes.array,\r\n  deleteContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact, getContacts } from \"./redux/contacts/contactsOperation\";\r\nimport Phonebook from \"./components/Phonebook/Phonebook\";\r\nimport Section from \"./components/Section/Section\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport Contacts from \"./components/Contacts/Contacts\";\r\nimport { getAllContacts, getLoading } from \"./redux/contacts/contactsSelector\";\r\nimport \"./App.css\";\r\n\r\nconst App = ({ items, addContact, getContacts, loading }) => {\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, [getContacts]);\r\n\r\n  const submitForm = (data) => {\r\n    const isOriginal = items.find(\r\n      (item) => item.name.toLowerCase() === data.name.toLowerCase()\r\n    );\r\n    isOriginal\r\n      ? alert(`${data.name} is already in contacts`)\r\n      : addContact(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && \"загрузка...\"}\r\n      <Section title=\"Phonebook\">\r\n        <Phonebook onSubmit={submitForm} />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <Contacts items={items} />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => {\r\n  return {\r\n    loading: getLoading(contacts),\r\n    items: getAllContacts(contacts),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addContact: (name) => dispatch(addContact(name)),\r\n    getContacts: (contacts) => dispatch(getContacts(contacts)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  deleteContactSuccess,\r\n  getContactsSuccess,\r\n  filterContacts,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  getContactsRequest,\r\n  getContactsError,\r\n} from \"./contactsActions\";\r\n\r\nexport const contactsItems = createReducer([], {\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n  [getContactsSuccess]: (_, { payload }) => [...payload],\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: contactsItems,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { contactsReducer } from \"./contacts/contactsRecuders\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./redux/store\"\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}